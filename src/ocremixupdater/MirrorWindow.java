package ocremixupdater;

import javax.swing.*;
import javax.swing.table.*;

/**
 * A window to let the user edit the mirrors to download ReMixes from.
 *
 * @author Copyright (C) 2012 Sauraen, sauraen@gmail.com; GPL licensed
 */
public class MirrorWindow extends javax.swing.JDialog {

    private ReMixDatabase data;
    private DefaultTableModel table;

    /** Creates new form MirrorWindow */
    public MirrorWindow(java.awt.Frame parent, boolean modal, ReMixDatabase data) {
        super(parent, modal);
        this.data = data;
        initComponents();

        TableColumnModel cols = tblMirrors.getColumnModel();
        cols.getColumn(0).setMinWidth(50);
        cols.getColumn(0).setMaxWidth(50);

        table = (DefaultTableModel)tblMirrors.getModel();

        refreshTable();
    }

    /** This method is called from within the constructor to
     * initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is
     * always regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tblMirrors = new javax.swing.JTable();
        comClose = new javax.swing.JButton();
        comNew = new javax.swing.JButton();
        comEdit = new javax.swing.JButton();
        comDelete = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);
        org.jdesktop.application.ResourceMap resourceMap = org.jdesktop.application.Application.getInstance(ocremixupdater.OCRemixUpdaterApp.class).getContext().getResourceMap(MirrorWindow.class);
        setTitle(resourceMap.getString("Form.title")); // NOI18N
        setName("Form"); // NOI18N
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowOpened(java.awt.event.WindowEvent evt) {
                formWindowOpened(evt);
            }
            public void windowClosing(java.awt.event.WindowEvent evt) {
                formWindowClosing(evt);
            }
        });

        jScrollPane1.setName("jScrollPane1"); // NOI18N

        tblMirrors.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null},
                {null, null},
                {null, null},
                {null, null}
            },
            new String [] {
                "Use", "Address"
            }
        ) {
            Class[] types = new Class [] {
                java.lang.Boolean.class, java.lang.String.class
            };
            boolean[] canEdit = new boolean [] {
                true, false
            };

            public Class getColumnClass(int columnIndex) {
                return types [columnIndex];
            }

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        tblMirrors.setName("tblMirrors"); // NOI18N
        tblMirrors.setSelectionMode(javax.swing.ListSelectionModel.SINGLE_SELECTION);
        jScrollPane1.setViewportView(tblMirrors);

        comClose.setText(resourceMap.getString("comClose.text")); // NOI18N
        comClose.setName("comClose"); // NOI18N
        comClose.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comCloseActionPerformed(evt);
            }
        });

        comNew.setText(resourceMap.getString("comNew.text")); // NOI18N
        comNew.setName("comNew"); // NOI18N
        comNew.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comNewActionPerformed(evt);
            }
        });

        comEdit.setText(resourceMap.getString("comEdit.text")); // NOI18N
        comEdit.setName("comEdit"); // NOI18N
        comEdit.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comEditActionPerformed(evt);
            }
        });

        comDelete.setText(resourceMap.getString("comDelete.text")); // NOI18N
        comDelete.setName("comDelete"); // NOI18N
        comDelete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                comDeleteActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(comNew, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comEdit, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(comDelete, javax.swing.GroupLayout.PREFERRED_SIZE, 77, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, 193, Short.MAX_VALUE)
                .addComponent(comClose, javax.swing.GroupLayout.PREFERRED_SIZE, 94, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(12, 12, 12))
            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 554, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 203, Short.MAX_VALUE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(comClose)
                    .addComponent(comNew)
                    .addComponent(comEdit)
                    .addComponent(comDelete))
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void comCloseActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comCloseActionPerformed
        onClosing();
        this.setVisible(false);
    }//GEN-LAST:event_comCloseActionPerformed

    private void comNewActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comNewActionPerformed
        String youTyped = JOptionPane.showInputDialog("Enter mirror path:\n" +
                "Example: http://ocrmirror.org/files/music/remixes/");
        if(youTyped != null && !youTyped.isEmpty()){
            Object[] row = {Boolean.TRUE, youTyped};
            table.addRow(row);
        }
    }//GEN-LAST:event_comNewActionPerformed

    private void comEditActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comEditActionPerformed
        int rowNum = tblMirrors.getSelectedRow();
        if(rowNum < 0){
            JOptionPane.showMessageDialog(this, "Select a mirror first!");
            return;
        }
        String youTyped = JOptionPane.showInputDialog("Enter mirror path:\n" +
                "Example: http://ocrmirror.org/files/music/remixes/");
        if(youTyped != null && !youTyped.isEmpty()){
            table.setValueAt(youTyped, rowNum, 1);
        }
    }//GEN-LAST:event_comEditActionPerformed

    private void comDeleteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_comDeleteActionPerformed
        int rowNum = tblMirrors.getSelectedRow();
        if(rowNum < 0){
            JOptionPane.showMessageDialog(this, "Select a mirror first!");
            return;
        }
        table.removeRow(rowNum);
    }//GEN-LAST:event_comDeleteActionPerformed

    private void formWindowOpened(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowOpened
        refreshTable();
    }//GEN-LAST:event_formWindowOpened

    private void formWindowClosing(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_formWindowClosing
        onClosing();
    }//GEN-LAST:event_formWindowClosing

    /**
     * Called when the form is closed, either by clicking the X or the Close
     * button.
     */
    private void onClosing(){
        data.mirrors.clear();
        for(int i=0; i<table.getRowCount(); i++){
            data.mirrors.add(new Mirror((String)table.getValueAt(i, 1), (Boolean)table.getValueAt(i, 0)));
        }
        data.getView().saveMirrorsList();
    }

    /**
     * Refresh the table of mirrors based on the mirrors list in data.
     */
    public void refreshTable(){
        int i;
        for(i=table.getRowCount()-1; i>=0; i--){
            table.removeRow(i);
        }
        Mirror mirror;
        for(i=0; i<data.mirrors.size(); i++){
            mirror = data.mirrors.get(i);
            table.addRow(new Object[2]);
            table.setValueAt(mirror.use, i, 0);
            table.setValueAt(mirror.path, i, 1);
        }
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton comClose;
    private javax.swing.JButton comDelete;
    private javax.swing.JButton comEdit;
    private javax.swing.JButton comNew;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JTable tblMirrors;
    // End of variables declaration//GEN-END:variables

}
